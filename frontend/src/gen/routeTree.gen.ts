/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './../routes/__root'

// Create Virtual Routes

const VerifyLazyImport = createFileRoute('/verify')()
const OrderLazyImport = createFileRoute('/order')()
const MyOrdersLazyImport = createFileRoute('/my-orders')()
const CheckoutLazyImport = createFileRoute('/checkout')()
const CartLazyImport = createFileRoute('/cart')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const VerifyLazyRoute = VerifyLazyImport.update({
  path: '/verify',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./../routes/verify.lazy').then((d) => d.Route))

const OrderLazyRoute = OrderLazyImport.update({
  path: '/order',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./../routes/order.lazy').then((d) => d.Route))

const MyOrdersLazyRoute = MyOrdersLazyImport.update({
  path: '/my-orders',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./../routes/my-orders.lazy').then((d) => d.Route))

const CheckoutLazyRoute = CheckoutLazyImport.update({
  path: '/checkout',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./../routes/checkout.lazy').then((d) => d.Route))

const CartLazyRoute = CartLazyImport.update({
  path: '/cart',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./../routes/cart.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./../routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/cart': {
      id: '/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartLazyImport
      parentRoute: typeof rootRoute
    }
    '/checkout': {
      id: '/checkout'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof CheckoutLazyImport
      parentRoute: typeof rootRoute
    }
    '/my-orders': {
      id: '/my-orders'
      path: '/my-orders'
      fullPath: '/my-orders'
      preLoaderRoute: typeof MyOrdersLazyImport
      parentRoute: typeof rootRoute
    }
    '/order': {
      id: '/order'
      path: '/order'
      fullPath: '/order'
      preLoaderRoute: typeof OrderLazyImport
      parentRoute: typeof rootRoute
    }
    '/verify': {
      id: '/verify'
      path: '/verify'
      fullPath: '/verify'
      preLoaderRoute: typeof VerifyLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/cart': typeof CartLazyRoute
  '/checkout': typeof CheckoutLazyRoute
  '/my-orders': typeof MyOrdersLazyRoute
  '/order': typeof OrderLazyRoute
  '/verify': typeof VerifyLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/cart': typeof CartLazyRoute
  '/checkout': typeof CheckoutLazyRoute
  '/my-orders': typeof MyOrdersLazyRoute
  '/order': typeof OrderLazyRoute
  '/verify': typeof VerifyLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/cart': typeof CartLazyRoute
  '/checkout': typeof CheckoutLazyRoute
  '/my-orders': typeof MyOrdersLazyRoute
  '/order': typeof OrderLazyRoute
  '/verify': typeof VerifyLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/cart' | '/checkout' | '/my-orders' | '/order' | '/verify'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/cart' | '/checkout' | '/my-orders' | '/order' | '/verify'
  id:
    | '__root__'
    | '/'
    | '/cart'
    | '/checkout'
    | '/my-orders'
    | '/order'
    | '/verify'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  CartLazyRoute: typeof CartLazyRoute
  CheckoutLazyRoute: typeof CheckoutLazyRoute
  MyOrdersLazyRoute: typeof MyOrdersLazyRoute
  OrderLazyRoute: typeof OrderLazyRoute
  VerifyLazyRoute: typeof VerifyLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  CartLazyRoute: CartLazyRoute,
  CheckoutLazyRoute: CheckoutLazyRoute,
  MyOrdersLazyRoute: MyOrdersLazyRoute,
  OrderLazyRoute: OrderLazyRoute,
  VerifyLazyRoute: VerifyLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/cart",
        "/checkout",
        "/my-orders",
        "/order",
        "/verify"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/cart": {
      "filePath": "cart.lazy.tsx"
    },
    "/checkout": {
      "filePath": "checkout.lazy.tsx"
    },
    "/my-orders": {
      "filePath": "my-orders.lazy.tsx"
    },
    "/order": {
      "filePath": "order.lazy.tsx"
    },
    "/verify": {
      "filePath": "verify.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
